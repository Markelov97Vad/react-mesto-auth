{"ast":null,"code":"import _objectSpread from\"/Users/maarsello/dev/react-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/Users/maarsello/dev/react-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/maarsello/dev/react-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Auth=/*#__PURE__*/function(){function Auth(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Auth);this._url=url;this._headers=headers;}_createClass(Auth,[{key:\"_checkResponse\",value:function _checkResponse(response){if(response.ok){return response.json();}else{return Promise.reject(\"\".concat(response.status,\" - \").concat(response.statusText));}}/**\n   * Response\n   * } \n      \"data\": {\n        \"_id\": \"5f5204c577488bcaa8b7bdf2\",,\n        \"email\": \"email@yandex.ru\"\n    }\n   * Error\n   * 400 - некорректно заполнено одно из полей\n   */},{key:\"register\",value:function register(_ref2){var _this=this;var password=_ref2.password,email=_ref2.email;return fetch(\"\".concat(this._url,\"/signup\"),{method:'POST',headers:this._headers,body:JSON.stringify({password:password,email:email})}).then(function(response){return _this._checkResponse(response);});}/**\n   * Response\n   *{\n      \"token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjUxNDhlNWJiODhmZGNhOTIxYjZhYzciLCJpYXQiOjE1OTkyMTExNzN9.Q3DVLh7t0f0BjyG9gh3UlUREYQxl2chdGTGy701lF6I\"\n    }\n   * \n   * Error \n   * 400 - некорректно заполнено одно из полей\n   * 401 - пользователь с email не найден\n   */},{key:\"authorize\",value:function authorize(_ref3){var _this2=this;var password=_ref3.password,email=_ref3.email;return fetch(\"\".concat(this._url,\"/signin\"),{method:'POST',headers:this._headers,body:JSON.stringify({password:password,email:email})}).then(function(response){return _this2._checkResponse(response);});}/**\n   * Response\n   *{\n      \"_id\":\"1f525cf06e02630312f3fed7\",\n      \"email\":\"email@email.ru\"\n    } \n   * \n   * Error \n   * 400 — Токен не передан или передан не в том формате\n   * 401 — Переданный токен некорректен\n   */},{key:\"checkTocken\",value:function checkTocken(token){var _this3=this;return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:_objectSpread(_objectSpread({},this._headers),{},{\"Authorization\":\"Bearer \".concat(token)})}).then(function(response){return _this3._checkResponse(response);});}}]);return Auth;}();var auth=new Auth({url:'https://auth.nomoreparties.co',headers:{'Content-Type':'application/json'}});export default auth;","map":{"version":3,"names":["Auth","_ref","url","headers","_classCallCheck","_url","_headers","_createClass","key","value","_checkResponse","response","ok","json","Promise","reject","concat","status","statusText","register","_ref2","_this","password","email","fetch","method","body","JSON","stringify","then","authorize","_ref3","_this2","checkTocken","token","_this3","_objectSpread","auth"],"sources":["/Users/maarsello/dev/react-auth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n  constructor({url, headers}) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json()\n    } else {\n      return Promise.reject(`${response.status} - ${response.statusText}`)\n    }  \n  }\n  /**\n   * Response\n   * } \n      \"data\": {\n        \"_id\": \"5f5204c577488bcaa8b7bdf2\",,\n        \"email\": \"email@yandex.ru\"\n    }\n   * Error\n   * 400 - некорректно заполнено одно из полей\n   */\n  register({password, email}) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({password, email})\n    })\n    .then( response =>  this._checkResponse(response))\n  }\n  /**\n   * Response\n   *{\n      \"token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjUxNDhlNWJiODhmZGNhOTIxYjZhYzciLCJpYXQiOjE1OTkyMTExNzN9.Q3DVLh7t0f0BjyG9gh3UlUREYQxl2chdGTGy701lF6I\"\n    }\n   * \n   * Error \n   * 400 - некорректно заполнено одно из полей\n   * 401 - пользователь с email не найден\n   */\n  authorize({password, email}) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({password, email})\n    })\n    .then(response => this._checkResponse(response))\n  }\n  /**\n   * Response\n   *{\n      \"_id\":\"1f525cf06e02630312f3fed7\",\n      \"email\":\"email@email.ru\"\n    } \n   * \n   * Error \n   * 400 — Токен не передан или передан не в том формате\n   * 401 — Переданный токен некорректен\n   */\n  checkTocken(token) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        ...this._headers,\n        \"Authorization\" : `Bearer ${token}`\n      }\n    })\n    .then(response => this._checkResponse(response))\n  }\n}\n\nconst auth = new Auth ({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default auth"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}